{"version":3,"sources":["PreflightTest.ts"],"names":["PreflightTest","Constants","mockUuid","mockSample","audioInputLevel","audioOutputLevel","bytesReceived","bytesSent","codec","jitter","mos","packetsLost","packetsLostFraction","packetsReceived","packetsSent","rtt","timestamp","mockRtcIceCandidateStats","PreflightRTCIceCandidateStatsCandidateType","PreflightRTCIceCandidateStatsDeleted","PreflightRTCIceCandidateStatsIp","PreflightRTCIceCandidateStatsIsRemote","PreflightRTCIceCandidateStatsNetworkCost","PreflightRTCIceCandidateStatsNetworkId","PreflightRTCIceCandidateStatsNetworkType","PreflightRTCIceCandidateStatsPort","PreflightRTCIceCandidateStatsPriority","PreflightRTCIceCandidateStatsProtocol","PreflightRTCIceCandidateStatsRelatedAddress","PreflightRTCIceCandidateStatsRelatedPort","PreflightRTCIceCandidateStatsTcpType","PreflightRTCIceCandidateStatsTransportId","PreflightRTCIceCandidateStatsUrl","mockPreflightStats","PreflightStatsAverage","PreflightStatsMax","PreflightStatsMin","mockPreflightRtcStats","PreflightRTCStatsJitter","PreflightRTCStatsMos","PreflightRTCStatsRtt","mockTiming","duration","endTime","startTime","mockNetworkTiming","signaling","peerConnection","iceConnection","preflightTest","mockWarning","name","threshold","values","mockWarningCleared","baseMockReport","callSid","edge","iceCandidates","networkStats","networkTiming","statsSamples","selectedEdge","selectedIceCandidatePair","localCandidate","remoteCandidate","warnings","warningsCleared","expectedReport","callQuality","CallQuality","Excellent","iceCandidateStats","candidateType","deleted","ip","isRemote","networkCost","networkId","networkType","port","priority","protocol","relatedAddress","relatedPort","tcpType","transportId","url","isTurnRequired","ice","end","start","samples","selectedIceCandidatePairStats","stats","average","max","min","testTiming","makeMockNativePreflightEvent","eventType","PreflightTestEventKeyUuid","PreflightTestEventKeyType"],"mappings":"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","sourcesContent":["import { PreflightTest } from '../PreflightTest';\nimport { Constants } from '../constants';\n\nexport const mockUuid = 'mock-uuid';\n\nexport const mockSample = {\n  audioInputLevel: 10,\n  audioOutputLevel: 20,\n  bytesReceived: 30,\n  bytesSent: 40,\n  codec: 'mock-codec',\n  jitter: 50,\n  mos: 60,\n  packetsLost: 70,\n  packetsLostFraction: 80,\n  packetsReceived: 90,\n  packetsSent: 100,\n  rtt: 110,\n  timestamp: '120',\n};\n\nexport const mockRtcIceCandidateStats: PreflightTest.RTCIceCandidateStats = {\n  [Constants.PreflightRTCIceCandidateStatsCandidateType]: 'mock-candidatetype',\n  [Constants.PreflightRTCIceCandidateStatsDeleted]: false,\n  [Constants.PreflightRTCIceCandidateStatsIp]: 'mock-ip',\n  [Constants.PreflightRTCIceCandidateStatsIsRemote]: false,\n  [Constants.PreflightRTCIceCandidateStatsNetworkCost]: 10,\n  [Constants.PreflightRTCIceCandidateStatsNetworkId]: 20,\n  [Constants.PreflightRTCIceCandidateStatsNetworkType]: 'mock-networktype',\n  [Constants.PreflightRTCIceCandidateStatsPort]: 30,\n  [Constants.PreflightRTCIceCandidateStatsPriority]: 40,\n  [Constants.PreflightRTCIceCandidateStatsProtocol]: 'mock-protocol',\n  [Constants.PreflightRTCIceCandidateStatsRelatedAddress]:\n    'mock-relatedaddress',\n  [Constants.PreflightRTCIceCandidateStatsRelatedPort]: 50,\n  [Constants.PreflightRTCIceCandidateStatsTcpType]: 'mock-tcptype',\n  [Constants.PreflightRTCIceCandidateStatsTransportId]: 'mock-transportid',\n  [Constants.PreflightRTCIceCandidateStatsUrl]: 'mock-url',\n};\n\nexport const mockPreflightStats: PreflightTest.Stats = {\n  [Constants.PreflightStatsAverage]: 10,\n  [Constants.PreflightStatsMax]: 20,\n  [Constants.PreflightStatsMin]: 30,\n};\n\nexport const mockPreflightRtcStats: PreflightTest.RTCStats = {\n  [Constants.PreflightRTCStatsJitter]: mockPreflightStats,\n  [Constants.PreflightRTCStatsMos]: mockPreflightStats,\n  [Constants.PreflightRTCStatsRtt]: mockPreflightStats,\n};\n\nexport const mockTiming = {\n  duration: 10,\n  endTime: 20,\n  startTime: 30,\n};\n\nexport const mockNetworkTiming = {\n  signaling: mockTiming,\n  peerConnection: mockTiming,\n  iceConnection: mockTiming,\n  preflightTest: mockTiming,\n};\n\nexport const mockWarning = {\n  name: 'mock-warningname',\n  threshold: 'mock-warningthreshold',\n  timestamp: 10,\n  values: 'mock-warningvalues',\n};\n\nexport const mockWarningCleared = {\n  name: 'mock-warningclearedname',\n  timestamp: 10,\n};\n\nexport const baseMockReport = {\n  callSid: 'mock-callsid',\n  edge: 'mock-edge',\n  iceCandidates: [mockRtcIceCandidateStats, mockRtcIceCandidateStats],\n  networkStats: mockPreflightRtcStats,\n  networkTiming: mockNetworkTiming,\n  statsSamples: [mockSample, mockSample],\n  selectedEdge: 'mock-selectededge',\n  selectedIceCandidatePair: {\n    localCandidate: mockRtcIceCandidateStats,\n    remoteCandidate: mockRtcIceCandidateStats,\n  },\n  warnings: [mockWarning, mockWarning],\n  warningsCleared: [mockWarningCleared, mockWarningCleared],\n};\n\nexport const expectedReport: PreflightTest.Report = {\n  callQuality: PreflightTest.CallQuality.Excellent,\n  callSid: 'mock-callsid',\n  edge: 'mock-edge',\n  iceCandidateStats: [\n    {\n      candidateType: 'mock-candidatetype',\n      deleted: false,\n      ip: 'mock-ip',\n      isRemote: false,\n      networkCost: 10,\n      networkId: 20,\n      networkType: 'mock-networktype',\n      port: 30,\n      priority: 40,\n      protocol: 'mock-protocol',\n      relatedAddress: 'mock-relatedaddress',\n      relatedPort: 50,\n      tcpType: 'mock-tcptype',\n      transportId: 'mock-transportid',\n      url: 'mock-url',\n    },\n    {\n      candidateType: 'mock-candidatetype',\n      deleted: false,\n      ip: 'mock-ip',\n      isRemote: false,\n      networkCost: 10,\n      networkId: 20,\n      networkType: 'mock-networktype',\n      port: 30,\n      priority: 40,\n      protocol: 'mock-protocol',\n      relatedAddress: 'mock-relatedaddress',\n      relatedPort: 50,\n      tcpType: 'mock-tcptype',\n      transportId: 'mock-transportid',\n      url: 'mock-url',\n    },\n  ],\n  isTurnRequired: false,\n  networkTiming: {\n    ice: {\n      duration: 10,\n      end: 20,\n      start: 30,\n    },\n    peerConnection: {\n      duration: 10,\n      end: 20,\n      start: 30,\n    },\n    signaling: {\n      duration: 10,\n      end: 20,\n      start: 30,\n    },\n  },\n  samples: [\n    {\n      audioInputLevel: 10,\n      audioOutputLevel: 20,\n      bytesReceived: 30,\n      bytesSent: 40,\n      codec: 'mock-codec',\n      jitter: 50,\n      mos: 60,\n      packetsLost: 70,\n      packetsLostFraction: 80,\n      packetsReceived: 90,\n      packetsSent: 100,\n      rtt: 110,\n      timestamp: 120,\n    },\n    {\n      audioInputLevel: 10,\n      audioOutputLevel: 20,\n      bytesReceived: 30,\n      bytesSent: 40,\n      codec: 'mock-codec',\n      jitter: 50,\n      mos: 60,\n      packetsLost: 70,\n      packetsLostFraction: 80,\n      packetsReceived: 90,\n      packetsSent: 100,\n      rtt: 110,\n      timestamp: 120,\n    },\n  ],\n  selectedEdge: 'mock-selectededge',\n  selectedIceCandidatePairStats: {\n    localCandidate: {\n      candidateType: 'mock-candidatetype',\n      deleted: false,\n      ip: 'mock-ip',\n      isRemote: false,\n      networkCost: 10,\n      networkId: 20,\n      networkType: 'mock-networktype',\n      port: 30,\n      priority: 40,\n      protocol: 'mock-protocol',\n      relatedAddress: 'mock-relatedaddress',\n      relatedPort: 50,\n      tcpType: 'mock-tcptype',\n      transportId: 'mock-transportid',\n      url: 'mock-url',\n    },\n    remoteCandidate: {\n      candidateType: 'mock-candidatetype',\n      deleted: false,\n      ip: 'mock-ip',\n      isRemote: false,\n      networkCost: 10,\n      networkId: 20,\n      networkType: 'mock-networktype',\n      port: 30,\n      priority: 40,\n      protocol: 'mock-protocol',\n      relatedAddress: 'mock-relatedaddress',\n      relatedPort: 50,\n      tcpType: 'mock-tcptype',\n      transportId: 'mock-transportid',\n      url: 'mock-url',\n    },\n  },\n  stats: {\n    jitter: {\n      average: 10,\n      max: 20,\n      min: 30,\n    },\n    mos: {\n      average: 10,\n      max: 20,\n      min: 30,\n    },\n    rtt: {\n      average: 10,\n      max: 20,\n      min: 30,\n    },\n  },\n  testTiming: {\n    duration: 10,\n    end: 20,\n    start: 30,\n  },\n  warnings: [\n    {\n      name: 'mock-warningname',\n      threshold: 'mock-warningthreshold',\n      timestamp: 10,\n      values: 'mock-warningvalues',\n    },\n    {\n      name: 'mock-warningname',\n      threshold: 'mock-warningthreshold',\n      timestamp: 10,\n      values: 'mock-warningvalues',\n    },\n  ],\n  warningsCleared: [\n    {\n      name: 'mock-warningclearedname',\n      timestamp: 10,\n    },\n    {\n      name: 'mock-warningclearedname',\n      timestamp: 10,\n    },\n  ],\n};\n\nexport const makeMockNativePreflightEvent = (eventType: any) => ({\n  [Constants.PreflightTestEventKeyUuid]: mockUuid,\n  [Constants.PreflightTestEventKeyType]: eventType,\n});\n"]}