{"version":3,"sources":["IncomingCallMessage.ts"],"names":["EventEmitter","validateCallMessage","IncomingCallMessage","constructor","callMessageInfo","content","contentType","messageType","_content","_contentType","_messageType","_voiceEventSid","voiceEventSid","getContent","getContentType","getMessageType","getSid"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,YAAT,QAA6B,eAA7B;AAEA,SAASC,mBAAT,QAAoC,eAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,mBAAN,SAAkCF,YAAlC,CAA+C;AACpD;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,EAAAA,WAAW,CAACC,eAAD,EAAyC;AAClD;;AADkD;;AAAA;;AAAA;;AAAA;;AAGlD,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,WAAX;AAAwBC,MAAAA;AAAxB,QACJN,mBAAmB,CAACG,eAAD,CADrB;AAGA,SAAKI,QAAL,GAAgBH,OAAhB;AACA,SAAKI,YAAL,GAAoBH,WAApB;AACA,SAAKI,YAAL,GAAoBH,WAApB;AACA,SAAKI,cAAL,GAAsBP,eAAe,CAACQ,aAAtC;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,UAAU,GAAQ;AAChB,WAAO,KAAKL,QAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEM,EAAAA,cAAc,GAAW;AACvB,WAAO,KAAKL,YAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEM,EAAAA,cAAc,GAAW;AACvB,WAAO,KAAKL,YAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEM,EAAAA,MAAM,GAAuB;AAC3B,WAAO,KAAKL,cAAZ;AACD;;AAnFmD","sourcesContent":["/**\n * Copyright Â© 2022 Twilio, Inc. All rights reserved. Licensed under the Twilio\n * license.\n *\n * See LICENSE in the project root for license information.\n */\n\nimport { EventEmitter } from 'eventemitter3';\nimport type { NativeCallMessageInfo } from '../type/CallMessage';\nimport { validateCallMessage } from './CallMessage';\n\n/**\n * CallMessage API is in beta.\n *\n * Provides access to information about a CallMessage, including the call\n * message content, content type, message type, and voice event SID.\n *\n * @public\n */\nexport class IncomingCallMessage extends EventEmitter {\n  /**\n   * The content of the message which should match the contentType parameter.\n   */\n  private _content: any;\n\n  /**\n   * The MIME type of the content.\n   */\n  private _contentType: string;\n\n  /**\n   * Message type\n   */\n  private _messageType: string;\n\n  /**\n   * An autogenerated ID that uniquely identifies this message.\n   * This is not required when sending a message from the SDK as this is\n   * autogenerated.\n   * The ID will be available after the message is sent, or immediately when a\n   * message is received.\n   */\n  private _voiceEventSid?: string;\n\n  /**\n   * Constructor for the {@link IncomingCallMessage} class. This should not be\n   * invoked by third-party code.\n   *\n   * @param NativeCallMessageInfo - An object containing all of the data from\n   * the native layer necessary to fully describe a call message, as well as\n   * invoke native functionality for the call message.\n   *\n   * @internal\n   */\n  constructor(callMessageInfo: NativeCallMessageInfo) {\n    super();\n\n    const { content, contentType, messageType } =\n      validateCallMessage(callMessageInfo);\n\n    this._content = content;\n    this._contentType = contentType;\n    this._messageType = messageType;\n    this._voiceEventSid = callMessageInfo.voiceEventSid;\n  }\n\n  /**\n   * {@inheritdoc CallMessage.content}\n   *\n   * @returns the content of the call message.\n   */\n  getContent(): any {\n    return this._content;\n  }\n\n  /**\n   * {@inheritdoc CallMessage.contentType}\n   *\n   * @returns the content type of the call message.\n   */\n  getContentType(): string {\n    return this._contentType;\n  }\n\n  /**\n   * {@inheritdoc CallMessage.messageType}\n   *\n   * @returns the message type of the call message.\n   */\n  getMessageType(): string {\n    return this._messageType;\n  }\n\n  /**\n   * Get the message SID.\n   * @returns\n   * - A string representing the message SID.\n   * - `undefined` if the call information has not yet been received from the\n   *   native layer.\n   */\n  getSid(): string | undefined {\n    return this._voiceEventSid;\n  }\n}\n"]}